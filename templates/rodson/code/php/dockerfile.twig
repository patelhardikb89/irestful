FROM ubuntu:16.10
MAINTAINER {{maintainer.name}} <{{maintainer.email.email}}>

ENV VERSION={{version}}
ENV PROJECT_NAME={{name.project_name|lower}}
ENV PROJECT_PATH=/var/www/html
ENV PROJECT_PATH_WITH_VERSION=${PROJECT_PATH}/${PROJECT_NAME}
ENV PROJECT_PATH_WITH_VERSION_WITH_BUILD=${PROJECT_PATH_WITH_VERSION}/build
ENV PROJECT_PATH_WITH_VERSION_WITH_BUILD_WITH_WEB=${PROJECT_PATH_WITH_VERSION_WITH_BUILD}/web
ENV REPOSITORY_URL={{repository_url.url}}
ENV API_PROTOCOL=http
ENV API_PORT=80

#install the extensions we need:
RUN apt-get update -y;
RUN apt-get upgrade -y;
RUN apt-get install -y python-software-properties;
RUN apt-get install -y software-properties-common;
RUN apt-get install -y git;
RUN apt-get install -y curl;
RUN apt-get install -y unzip;
RUN apt-get install -y php;
RUN apt-get install -y php-cli;
RUN apt-get install -y php-fpm;
RUN apt-get install -y php-curl;
RUN apt-get install -y php-xml;
RUN apt-get install -y php-mbstring;
RUN apt-get install -y php-bcmath;
RUN apt-get install -y php-mysql;

#purge apache:
RUN apt-get -y purge apache2;

#install nginx:
RUN apt-get install -y nginx;

#set workdir
WORKDIR ${PROJECT_PATH}

#download our source code:
RUN echo ${REPOSITORY_URL}/archive/${VERSION}.zip
RUN curl -o project.zip -fSL "${REPOSITORY_URL}/archive/${VERSION}.zip"
RUN unzip project.zip -d ${PROJECT_PATH}
RUN mv ${PROJECT_PATH}/$(ls | sort -n | head -1) ${PROJECT_PATH_WITH_VERSION}

#set workdir
WORKDIR ${PROJECT_PATH_WITH_VERSION}

#download composer:
RUN curl -sS https://getcomposer.org/installer | php;

#create and change user:
RUN adduser  --ingroup root docker
RUN echo "docker:mypass"|chpasswd
RUN chown -R docker ${PROJECT_PATH_WITH_VERSION}
USER docker

#install the app using composer:
RUN php composer.phar install --prefer-source

#move composer to the build folder:
RUN mv composer.phar ${PROJECT_PATH_WITH_VERSION_WITH_BUILD}/composer.phar

#set the user and directory back to root:
USER root
RUN chown -R root ${PROJECT_PATH_WITH_VERSION}

#set workdir
WORKDIR ${PROJECT_PATH_WITH_VERSION_WITH_BUILD}

#set the volumes:
VOLUME ["${PROJECT_PATH}", "/etc/nginx/sites-available", "/var/log/nginx"]

#expose api port:
EXPOSE 80

#setup entrypoint:
COPY ./docker-entrypoint.sh /
RUN chmod 755 /docker-entrypoint.sh;

#entrypoint:
ENTRYPOINT ["/docker-entrypoint.sh"]
